name: "Continuous Integration"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  ubuntu-2004:
    name: Test Ubuntu 20.04 LTS

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install dependencies 🔧
        run: |
          sudo apt-get install  \
            libapp-options-perl \
            libwww-perl         \
            libjson-xs-perl
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      # Test compilation
      - name: Version 📏
        run: cd t && bash test.sh

  ubuntu-1804:
    name: Test Ubuntu 18.04 LTS
    runs-on: ubuntu-18.04
    steps:
      - name: Install dependencies 🔧
        run: |
          sudo apt-get install  \
            libapp-options-perl \
            libwww-perl         \
            libjson-xs-perl

      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Version 📏
        run: cd t && bash test.sh

  docker:
    name: Build & test Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
      - name: Build CLI image 🧪
        run: docker build -t notify-me -f docker/cli/Dockerfile .
      # Run test
      - name: Send test message 📤
        run: |
          docker run \
            --env PTSV2_USERNAME="${{ secrets.PTSV2_USERNAME }}" \
            --env PTSV2_PASSWORD="${{ secrets.PTSV2_PASSWORD }}" \
            notify-me \
            test.pl --msg="test"
      - name: Test message 📥
        run: curl -s "https://ptsv2.com/t/github-cyclenerd-notify-me/d/latest/text" | grep '{"message":"test"}'

      # Clean up
      - name: Clean up 🗑️
        run: curl -s "https://ptsv2.com/t/github-cyclenerd-notify-me/flush_all"

      # Store
      - name: Login to GitHub Container registry 🏭
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image to registry 🚢
        run: |
          docker tag notify-me ghcr.io/cyclenerd/notify-me:test
          docker push ghcr.io/cyclenerd/notify-me:test