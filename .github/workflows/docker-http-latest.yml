name: "Latest Docker HTTP image"

on:
  push:
    branches: [ master ]

jobs:

  docker-http:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers 💾
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container registry 🏭
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push HTTP image 🧪
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/http/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/cyclenerd/notify-me:http-test
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  docker-http-test:
    name: Test Docker image
    needs: [docker-http]
    runs-on: ubuntu-latest
    services: # Define Docker containers to use for this job.
      http-server: # Container ID for our notify-me container
        image: ghcr.io/cyclenerd/notify-me:http-test # Image to pull from GitHub Container registry
        env:
          API_KEY: foo
          PTSV2_URL: "https://ptsv2.com/t/github-cyclenerd-notify-me-http/post"
          PTSV2_USERNAME: "${{ secrets.PTSV2_USERNAME }}"
          PTSV2_PASSWORD: "${{ secrets.PTSV2_PASSWORD }}"
        ports:
          - 8080:8080 # TCP port to expose on Docker container and host environment 
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Test version 📏
        run: curl -i http://localhost:8080/?key=foo

      - name: Send test message 📤
        run: |
          curl -i \
            -H "Content-Type: application/json" \
            --data @http/NotifyMe-HTTP/t/test.json \
            http://localhost:8080/v1/test.pl?key=foo

      - name: Test message 📥
        run: curl -s "https://ptsv2.com/t/github-cyclenerd-notify-me-http/d/latest/text" | grep '{"message":"Test message"}'

      # Clean up
      - name: Clean up 🗑️
        run: curl -s "https://ptsv2.com/t/github-cyclenerd-notify-me-http/flush_all"